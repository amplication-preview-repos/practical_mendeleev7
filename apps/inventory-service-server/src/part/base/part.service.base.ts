/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Part as PrismaPart } from "@prisma/client";

export class PartServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PartCountArgs, "select">): Promise<number> {
    return this.prisma.part.count(args);
  }

  async parts(args: Prisma.PartFindManyArgs): Promise<PrismaPart[]> {
    return this.prisma.part.findMany(args);
  }
  async part(args: Prisma.PartFindUniqueArgs): Promise<PrismaPart | null> {
    return this.prisma.part.findUnique(args);
  }
  async createPart(args: Prisma.PartCreateArgs): Promise<PrismaPart> {
    return this.prisma.part.create(args);
  }
  async updatePart(args: Prisma.PartUpdateArgs): Promise<PrismaPart> {
    return this.prisma.part.update(args);
  }
  async deletePart(args: Prisma.PartDeleteArgs): Promise<PrismaPart> {
    return this.prisma.part.delete(args);
  }
}
